<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinfan.wxshop.business.dao.OrderDetailMapper" >
  <resultMap id="BaseResultMap" type="com.xinfan.wxshop.business.entity.OrderDetail" >
    <id column="detail_id" property="detailId" jdbcType="INTEGER" />
    <result column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="orgin_price" property="orginPrice" jdbcType="REAL" />
    <result column="final_price" property="finalPrice" jdbcType="REAL" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    detail_id, order_id, goods_id, quantity, orgin_price, final_price, goods_name, weight, 
    unit
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinfan.wxshop.business.entity.OrderDetailExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinfan.wxshop.business.entity.OrderDetailExample" >
    delete from t_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinfan.wxshop.business.entity.OrderDetail" >
    insert into t_order_detail (detail_id, order_id, goods_id, 
      quantity, orgin_price, final_price, 
      goods_name, weight, unit
      )
    values (#{detailId,jdbcType=INTEGER}, #{orderId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, 
      #{quantity,jdbcType=INTEGER}, #{orginPrice,jdbcType=REAL}, #{finalPrice,jdbcType=REAL}, 
      #{goodsName,jdbcType=VARCHAR}, #{weight,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xinfan.wxshop.business.entity.OrderDetail" >
    insert into t_order_detail
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        detail_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="orginPrice != null" >
        orgin_price,
      </if>
      <if test="finalPrice != null" >
        final_price,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="weight != null" >
        weight,
      </if>
      <if test="unit != null" >
        unit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="detailId != null" >
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="orginPrice != null" >
        #{orginPrice,jdbcType=REAL},
      </if>
      <if test="finalPrice != null" >
        #{finalPrice,jdbcType=REAL},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        #{weight,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinfan.wxshop.business.entity.OrderDetailExample" resultType="java.lang.Integer" >
    select count(*) from t_order_detail
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order_detail
    <set >
      <if test="record.detailId != null" >
        detail_id = #{record.detailId,jdbcType=INTEGER},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.orginPrice != null" >
        orgin_price = #{record.orginPrice,jdbcType=REAL},
      </if>
      <if test="record.finalPrice != null" >
        final_price = #{record.finalPrice,jdbcType=REAL},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.weight != null" >
        weight = #{record.weight,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null" >
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order_detail
    set detail_id = #{record.detailId,jdbcType=INTEGER},
      order_id = #{record.orderId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      quantity = #{record.quantity,jdbcType=INTEGER},
      orgin_price = #{record.orginPrice,jdbcType=REAL},
      final_price = #{record.finalPrice,jdbcType=REAL},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      weight = #{record.weight,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinfan.wxshop.business.entity.OrderDetail" >
    update t_order_detail
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="orginPrice != null" >
        orgin_price = #{orginPrice,jdbcType=REAL},
      </if>
      <if test="finalPrice != null" >
        final_price = #{finalPrice,jdbcType=REAL},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
    </set>
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinfan.wxshop.business.entity.OrderDetail" >
    update t_order_detail
    set order_id = #{orderId,jdbcType=INTEGER},
      goods_id = #{goodsId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      orgin_price = #{orginPrice,jdbcType=REAL},
      final_price = #{finalPrice,jdbcType=REAL},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      weight = #{weight,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR}
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
</mapper>