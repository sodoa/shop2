<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinfan.wxshop.business.dao.LoveMapper" >
  <resultMap id="BaseResultMap" type="com.xinfan.wxshop.business.entity.Love" >
    <id column="love_id" property="loveId" jdbcType="INTEGER" />
    <result column="goods_id" property="goodsId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="goods_name" property="goodsName" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    love_id, goods_id, customer_id, goods_name, createdate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinfan.wxshop.business.entity.LoveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_love
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_love
    where love_id = #{loveId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_love
    where love_id = #{loveId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinfan.wxshop.business.entity.LoveExample" >
    delete from t_love
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinfan.wxshop.business.entity.Love" >
    insert into t_love (love_id, goods_id, customer_id, 
      goods_name, createdate)
    values (#{loveId,jdbcType=INTEGER}, #{goodsId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, 
      #{goodsName,jdbcType=VARCHAR}, #{createdate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.xinfan.wxshop.business.entity.Love" >
    insert into t_love
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loveId != null" >
        love_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="goodsName != null" >
        goods_name,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loveId != null" >
        #{loveId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinfan.wxshop.business.entity.LoveExample" resultType="java.lang.Integer" >
    select count(*) from t_love
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_love
    <set >
      <if test="record.loveId != null" >
        love_id = #{record.loveId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsId != null" >
        goods_id = #{record.goodsId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.goodsName != null" >
        goods_name = #{record.goodsName,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null" >
        createdate = #{record.createdate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_love
    set love_id = #{record.loveId,jdbcType=INTEGER},
      goods_id = #{record.goodsId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      goods_name = #{record.goodsName,jdbcType=VARCHAR},
      createdate = #{record.createdate,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinfan.wxshop.business.entity.Love" >
    update t_love
    <set >
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null" >
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=DATE},
      </if>
    </set>
    where love_id = #{loveId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinfan.wxshop.business.entity.Love" >
    update t_love
    set goods_id = #{goodsId,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=INTEGER},
      goods_name = #{goodsName,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=DATE}
    where love_id = #{loveId,jdbcType=INTEGER}
  </update>

  
  
  <select id="pageList" parameterType="com.xinfan.wxshop.common.base.DataMap" resultType="com.xinfan.wxshop.common.base.DataMap">
  	
  			select l.*,g.goods_lname,g.thumbnail_url,g.final_prices,g.discount from t_love l ,t_goods g where l.goods_id = g.goods_id and g.goods_status = 1 and l.customer_id  = #{customerId}
  			order by l.createdate desc
  
  
  </select>
  
  
</mapper>