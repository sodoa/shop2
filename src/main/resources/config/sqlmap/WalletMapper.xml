<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xinfan.wxshop.business.dao.WalletMapper" >
  <resultMap id="BaseResultMap" type="com.xinfan.wxshop.business.entity.Wallet" >
    <id column="wallet_id" property="walletId" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="INTEGER" />
    <result column="balance" property="balance" jdbcType="REAL" />
    <result column="distr_balance" property="distrBalance" jdbcType="REAL" />
    <result column="distr_count" property="distrCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    wallet_id, customer_id, balance, distr_balance, distr_count
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xinfan.wxshop.business.entity.WalletExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_wallet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_wallet
    where wallet_id = #{walletId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_wallet
    where wallet_id = #{walletId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xinfan.wxshop.business.entity.WalletExample" >
    delete from t_wallet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xinfan.wxshop.business.entity.Wallet" >
    insert into t_wallet (wallet_id, customer_id, balance, 
      distr_balance, distr_count)
    values (#{walletId,jdbcType=INTEGER}, #{customerId,jdbcType=INTEGER}, #{balance,jdbcType=REAL}, 
      #{distrBalance,jdbcType=REAL}, #{distrCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xinfan.wxshop.business.entity.Wallet" >
    insert into t_wallet
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="walletId != null" >
        wallet_id,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="distrBalance != null" >
        distr_balance,
      </if>
      <if test="distrCount != null" >
        distr_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="walletId != null" >
        #{walletId,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=REAL},
      </if>
      <if test="distrBalance != null" >
        #{distrBalance,jdbcType=REAL},
      </if>
      <if test="distrCount != null" >
        #{distrCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xinfan.wxshop.business.entity.WalletExample" resultType="java.lang.Integer" >
    select count(*) from t_wallet
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_wallet
    <set >
      <if test="record.walletId != null" >
        wallet_id = #{record.walletId,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=REAL},
      </if>
      <if test="record.distrBalance != null" >
        distr_balance = #{record.distrBalance,jdbcType=REAL},
      </if>
      <if test="record.distrCount != null" >
        distr_count = #{record.distrCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_wallet
    set wallet_id = #{record.walletId,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=REAL},
      distr_balance = #{record.distrBalance,jdbcType=REAL},
      distr_count = #{record.distrCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xinfan.wxshop.business.entity.Wallet" >
    update t_wallet
    <set >
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=REAL},
      </if>
      <if test="distrBalance != null" >
        distr_balance = #{distrBalance,jdbcType=REAL},
      </if>
      <if test="distrCount != null" >
        distr_count = #{distrCount,jdbcType=INTEGER},
      </if>
    </set>
    where wallet_id = #{walletId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xinfan.wxshop.business.entity.Wallet" >
    update t_wallet
    set customer_id = #{customerId,jdbcType=INTEGER},
      balance = #{balance,jdbcType=REAL},
      distr_balance = #{distrBalance,jdbcType=REAL},
      distr_count = #{distrCount,jdbcType=INTEGER}
    where wallet_id = #{walletId,jdbcType=INTEGER}
  </update>
</mapper>